{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notification.js","services/persons.js","components/App.js","index.js"],"names":["Filter","filter","setFilter","value","onChange","event","target","PersonForm","newName","setNewName","newNumber","setNewNumber","handleSubmit","onSubmit","type","Persons","persons","Notification","message","error","className","baseUrl","newObject","axios","post","then","responce","data","get","id","delete","put","App","useState","setPersons","setMessage","setError","addMessage","text","setTimeout","addError","mapPersons","p","name","toLowerCase","includes","map","i","key","number","onClick","find","window","confirm","personsService","retNote","catch","err","handleDeletePerson","useEffect","initialPersons","preventDefault","length","withSameName","undefined","newPerson","Math","random","concat","response","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1d36be31.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({filter, setFilter}) => <>\n  filter shown with \n  <input \n    value={filter}  \n    onChange={(event) => setFilter(event.target.value)}\n  />\n</>\n\nexport default Filter\n","import React from 'react'\n\nconst PersonForm = ({\n  newName,\n  setNewName,\n  newNumber,\n  setNewNumber,\n  handleSubmit\n}) => {\n  return <form onSubmit={handleSubmit}>\n    <div>\n      name: \n      <input \n        value={newName}  \n        onChange={event => setNewName(event.target.value)}\n      />\n    </div>\n    <div>\n      number: \n      <input \n        value={newNumber}  \n        onChange={event => setNewNumber(event.target.value)}\n      />\n    </div>\n    <div>\n      <button type=\"submit\">add</button>\n    </div>\n  </form>\n}\n\nexport default PersonForm \n","import React from 'react'\n\nconst Persons = ({persons}) => {\n  return <ul>{persons}</ul>\n}\n\nexport default Persons\n","import React from 'react'\n\nimport '../index.css'\n\nconst Notification = ({ message, error }) => {\n  if (message === null && error === null) {\n    return null\n  }\n\n  const display = () => {\n    if (message) {\n      return <div className=\"message\">\n        {message}\n      </div>\n    }\n    return <div className=\"error\">\n      {error}\n    </div>\n  }\n\n  return (display())\n}\n\nexport default Notification \n","import axios from 'axios'\n\nconst baseUrl = \"/api/persons\"\n\nconst create = newObject => \n  axios\n    .post(baseUrl, newObject)\n    .then(responce => responce.data)\n\nconst deletePerson = id => \n  axios\n    .delete(`${baseUrl}/${id}`)\n    .then(responce => responce.data)\n\n\n\nconst getAll = () => \n  axios\n    .get(baseUrl)\n    .then(responce => responce.data)\n\nconst updateNumber = (id, newObject) =>\n  axios\n    .put(`${baseUrl}/${id}`, newObject)\n    .then(responce => responce.data)\n\n\n\nexport default { create, getAll, deletePerson, updateNumber }\n","import React, { useState, useEffect } from 'react'\n\nimport Filter from './Filter'\nimport PersonForm from './PersonForm'\nimport Persons from './Persons'\nimport Notification from './Notification'\n\nimport personsService from '../services/persons'\n\nconst App = () => {\n\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filter, setFilter ] = useState('')\n  const [ message, setMessage ] = useState(null)\n  const [ error, setError ] = useState(null)\n\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    if (newName.length === 0 || newNumber.length === 0) {\n      addError(`input name and number`)\n      return\n    }\n    const withSameName = persons.find(p => p.name === newName)\n    if (withSameName !== undefined) {\n      const result = window.confirm(`${newName} is already in phonebook. Replace old number with new one?`)\n      if (result) {\n        personsService\n          .updateNumber(withSameName.id, {...withSameName, number: newNumber })\n          .then(retNote => {\n            setPersons(persons.map(p => p.id !== retNote.id ? p : retNote))\n            setNewName(\"\")\n            setNewNumber(\"\")\n            addMessage(`Updated: ${retNote.name}`)\n          })\n          .catch(err => {\n            addError(`Error on server`)\n          })\n      }\n      return\n    }\n\n    const newPerson = { \n      name: newName,\n      number: newNumber,\n      id: Math.random(),\n    }\n\n    personsService\n      .create(newPerson)\n      .then(retNote => {\n        setPersons(persons.concat(retNote))\n        setNewName(\"\")\n        setNewNumber(\"\")\n        addMessage(`Added: ${retNote.name}`)\n      })\n      .catch(err => {\n        addError(err.response.data.error)\n        // console.log(err.response.data)\n      })\n\n  }\n\n  const addMessage = text => {\n    setMessage(text)\n    setTimeout(() => {\n      setMessage(null)\n    }, 5000)\n  }\n  const addError = text => {\n    setError(text)\n    setTimeout(() => {\n      setError(null)\n    }, 5000)\n  }\n\n  const handleDeletePerson = id => {\n    const name = persons.find(p => p.id === id).name\n    const result = window.confirm(`Delete ${name} ?`)\n    if (result) {\n      personsService\n        .deletePerson(id)\n        .then(retNote => {\n          // console.log(retNote)\n          setPersons(persons.filter(p => p.id !== id))\n          addMessage(`Deleted: ${name}`)\n        })\n        .catch(err => {\n          addError(`Error on server`)\n        })\n    }\n  }\n\n\n  const mapPersons = persons\n    .filter(p => {\n      return p.name.toLowerCase().includes(filter.toLowerCase())\n    })\n    .map((p, i) => \n      <li key={p.name+i} >\n        {p.name} {p.number} \n        <button onClick={() => handleDeletePerson(p.id)}>delete</button>\n      </li>)\n\n\n\n  useEffect(() => {\n    personsService\n      .getAll()\n      .then(initialPersons => setPersons(initialPersons))\n  },[])\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification error={error} message={message} />\n      <Filter  \n        filter={filter}\n        setFilter={setFilter}\n      />\n\n      <h2>Add new</h2>\n      <PersonForm\n        newName={newName}\n        setNewName={setNewName}\n        newNumber={newNumber}\n        setNewNumber={setNewNumber}\n        handleSubmit={handleSubmit}\n      />\n\n      <h2>Numbers</h2>\n      <Persons persons={mapPersons} />\n    </div>\n  )\n\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './components/App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}